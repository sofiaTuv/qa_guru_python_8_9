{"uid":"ce607f5ddf6c0d24","name":"test_github","fullName":"tests.test_selene_with_steps#test_github","historyId":"57aca73a963c8b1f77133ca019b488f6","time":{"start":1697137101964,"stop":1697137102874,"duration":910},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b2c16d7fb3 <unknown>\n#1 0x55b2c13ab4a7 <unknown>\n#2 0x55b2c13dec93 <unknown>\n#3 0x55b2c13db10c <unknown>\n#4 0x55b2c141dac6 <unknown>\n#5 0x55b2c1414713 <unknown>\n#6 0x55b2c13e718b <unknown>\n#7 0x55b2c13e7f7e <unknown>\n#8 0x55b2c169d8d8 <unknown>\n#9 0x55b2c16a1800 <unknown>\n#10 0x55b2c16abcfc <unknown>\n#11 0x55b2c16a2418 <unknown>\n#12 0x55b2c166f42f <unknown>\n#13 0x55b2c16c64e8 <unknown>\n#14 0x55b2c16c66b4 <unknown>\n#15 0x55b2c16d7143 <unknown>\n#16 0x7f4910c94b43 <unknown>","statusTrace":"def test_github():\n        allure.dynamic.tag('web')\n        allure.dynamic.severity(Severity.BLOCKER)\n        allure.dynamic.label('owner', 's.tuvykina')\n        allure.dynamic.feature('Задача в репозитории #76')\n        allure.dynamic.story('Я не могу увидеть задачу с номером #76')\n        allure.dynamic.link(\"https://github.com\", name=\"Testing\")\n    \n        with allure.step('Открыть главную страницу github.com'):\n>           browser.open(\"https://github.com\")\n\ntests/test_selene_with_steps.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f51a8bfcb90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55b2c16c66b4 \\\\u003Cunknown>\\\\n#15 0x55b2c16d7143 \\\\u003Cunknown>\\\\n#16 0x7f4910c94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55b2c16d7fb3 <unknown>\nE       #1 0x55b2c13ab4a7 <unknown>\nE       #2 0x55b2c13dec93 <unknown>\nE       #3 0x55b2c13db10c <unknown>\nE       #4 0x55b2c141dac6 <unknown>\nE       #5 0x55b2c1414713 <unknown>\nE       #6 0x55b2c13e718b <unknown>\nE       #7 0x55b2c13e7f7e <unknown>\nE       #8 0x55b2c169d8d8 <unknown>\nE       #9 0x55b2c16a1800 <unknown>\nE       #10 0x55b2c16abcfc <unknown>\nE       #11 0x55b2c16a2418 <unknown>\nE       #12 0x55b2c166f42f <unknown>\nE       #13 0x55b2c16c64e8 <unknown>\nE       #14 0x55b2c16c66b4 <unknown>\nE       #15 0x55b2c16d7143 <unknown>\nE       #16 0x7f4910c94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_size","time":{"start":1697137099122,"stop":1697137099123,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b2c16d7fb3 <unknown>\n#1 0x55b2c13ab4a7 <unknown>\n#2 0x55b2c13dec93 <unknown>\n#3 0x55b2c13db10c <unknown>\n#4 0x55b2c141dac6 <unknown>\n#5 0x55b2c1414713 <unknown>\n#6 0x55b2c13e718b <unknown>\n#7 0x55b2c13e7f7e <unknown>\n#8 0x55b2c169d8d8 <unknown>\n#9 0x55b2c16a1800 <unknown>\n#10 0x55b2c16abcfc <unknown>\n#11 0x55b2c16a2418 <unknown>\n#12 0x55b2c166f42f <unknown>\n#13 0x55b2c16c64e8 <unknown>\n#14 0x55b2c16c66b4 <unknown>\n#15 0x55b2c16d7143 <unknown>\n#16 0x7f4910c94b43 <unknown>","statusTrace":"def test_github():\n        allure.dynamic.tag('web')\n        allure.dynamic.severity(Severity.BLOCKER)\n        allure.dynamic.label('owner', 's.tuvykina')\n        allure.dynamic.feature('Задача в репозитории #76')\n        allure.dynamic.story('Я не могу увидеть задачу с номером #76')\n        allure.dynamic.link(\"https://github.com\", name=\"Testing\")\n    \n        with allure.step('Открыть главную страницу github.com'):\n>           browser.open(\"https://github.com\")\n\ntests/test_selene_with_steps.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f51a8bfcb90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55b2c16c66b4 \\\\u003Cunknown>\\\\n#15 0x55b2c16d7143 \\\\u003Cunknown>\\\\n#16 0x7f4910c94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55b2c16d7fb3 <unknown>\nE       #1 0x55b2c13ab4a7 <unknown>\nE       #2 0x55b2c13dec93 <unknown>\nE       #3 0x55b2c13db10c <unknown>\nE       #4 0x55b2c141dac6 <unknown>\nE       #5 0x55b2c1414713 <unknown>\nE       #6 0x55b2c13e718b <unknown>\nE       #7 0x55b2c13e7f7e <unknown>\nE       #8 0x55b2c169d8d8 <unknown>\nE       #9 0x55b2c16a1800 <unknown>\nE       #10 0x55b2c16abcfc <unknown>\nE       #11 0x55b2c16a2418 <unknown>\nE       #12 0x55b2c166f42f <unknown>\nE       #13 0x55b2c16c64e8 <unknown>\nE       #14 0x55b2c16c66b4 <unknown>\nE       #15 0x55b2c16d7143 <unknown>\nE       #16 0x7f4910c94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Открыть главную страницу github.com","time":{"start":1697137101964,"stop":1697137102872,"duration":908},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b2c16d7fb3 <unknown>\n#1 0x55b2c13ab4a7 <unknown>\n#2 0x55b2c13dec93 <unknown>\n#3 0x55b2c13db10c <unknown>\n#4 0x55b2c141dac6 <unknown>\n#5 0x55b2c1414713 <unknown>\n#6 0x55b2c13e718b <unknown>\n#7 0x55b2c13e7f7e <unknown>\n#8 0x55b2c169d8d8 <unknown>\n#9 0x55b2c16a1800 <unknown>\n#10 0x55b2c16abcfc <unknown>\n#11 0x55b2c16a2418 <unknown>\n#12 0x55b2c166f42f <unknown>\n#13 0x55b2c16c64e8 <unknown>\n#14 0x55b2c16c66b4 <unknown>\n#15 0x55b2c16d7143 <unknown>\n#16 0x7f4910c94b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/qa_guru_python_8_9/qa_guru_python_8_9/tests/test_selene_with_steps.py\", line 17, in test_github\n    browser.open(\"https://github.com\")\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"c86c730868b6178","name":"stderr","source":"c86c730868b6178.txt","type":"text/plain","size":258}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[{"name":"browser_size::0","time":{"start":1697137102941,"stop":1697137102941,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"web"},{"name":"severity","value":"blocker"},{"name":"owner","value":"s.tuvykina"},{"name":"feature","value":"Задача в репозитории #76"},{"name":"story","value":"Я не могу увидеть задачу с номером #76"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_selene_with_steps"},{"name":"host","value":"fv-az583-124"},{"name":"thread","value":"2183-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_selene_with_steps"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Testing","url":"https://github.com","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","owner":"s.tuvykina","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"d5e46027f1e57a2b","reportUrl":"https://sofiaTuv.github.io/qa_guru_python_8_9/6//#testresult/d5e46027f1e57a2b","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5624ff628fb3 <unknown>\n#1 0x5624ff2fc4a7 <unknown>\n#2 0x5624ff32fc93 <unknown>\n#3 0x5624ff32c10c <unknown>\n#4 0x5624ff36eac6 <unknown>\n#5 0x5624ff365713 <unknown>\n#6 0x5624ff33818b <unknown>\n#7 0x5624ff338f7e <unknown>\n#8 0x5624ff5ee8d8 <unknown>\n#9 0x5624ff5f2800 <unknown>\n#10 0x5624ff5fccfc <unknown>\n#11 0x5624ff5f3418 <unknown>\n#12 0x5624ff5c042f <unknown>\n#13 0x5624ff6174e8 <unknown>\n#14 0x5624ff6176b4 <unknown>\n#15 0x5624ff628143 <unknown>\n#16 0x7fc133494b43 <unknown>","time":{"start":1697136476584,"stop":1697136477463,"duration":879}},{"uid":"c70f2a6ad3e4445b","reportUrl":"https://sofiaTuv.github.io/qa_guru_python_8_9/5//#testresult/c70f2a6ad3e4445b","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564b4b87afb3 <unknown>\n#1 0x564b4b54e4a7 <unknown>\n#2 0x564b4b581c93 <unknown>\n#3 0x564b4b57e10c <unknown>\n#4 0x564b4b5c0ac6 <unknown>\n#5 0x564b4b5b7713 <unknown>\n#6 0x564b4b58a18b <unknown>\n#7 0x564b4b58af7e <unknown>\n#8 0x564b4b8408d8 <unknown>\n#9 0x564b4b844800 <unknown>\n#10 0x564b4b84ecfc <unknown>\n#11 0x564b4b845418 <unknown>\n#12 0x564b4b81242f <unknown>\n#13 0x564b4b8694e8 <unknown>\n#14 0x564b4b8696b4 <unknown>\n#15 0x564b4b87a143 <unknown>\n#16 0x7f84b7094b43 <unknown>","time":{"start":1697136018960,"stop":1697136019865,"duration":905}},{"uid":"100071d435ec359b","reportUrl":"https://sofiaTuv.github.io/qa_guru_python_8_9/3//#testresult/100071d435ec359b","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a9f8307fb3 <unknown>\n#1 0x55a9f7fdb4a7 <unknown>\n#2 0x55a9f800ec93 <unknown>\n#3 0x55a9f800b10c <unknown>\n#4 0x55a9f804dac6 <unknown>\n#5 0x55a9f8044713 <unknown>\n#6 0x55a9f801718b <unknown>\n#7 0x55a9f8017f7e <unknown>\n#8 0x55a9f82cd8d8 <unknown>\n#9 0x55a9f82d1800 <unknown>\n#10 0x55a9f82dbcfc <unknown>\n#11 0x55a9f82d2418 <unknown>\n#12 0x55a9f829f42f <unknown>\n#13 0x55a9f82f64e8 <unknown>\n#14 0x55a9f82f66b4 <unknown>\n#15 0x55a9f8307143 <unknown>\n#16 0x7fcc1ba94b43 <unknown>","time":{"start":1697135624279,"stop":1697135625133,"duration":854}},{"uid":"78375c4890680fd8","reportUrl":"https://sofiaTuv.github.io/qa_guru_python_8_9/3//#testresult/78375c4890680fd8","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562bbd607fb3 <unknown>\n#1 0x562bbd2db4a7 <unknown>\n#2 0x562bbd30ec93 <unknown>\n#3 0x562bbd30b10c <unknown>\n#4 0x562bbd34dac6 <unknown>\n#5 0x562bbd344713 <unknown>\n#6 0x562bbd31718b <unknown>\n#7 0x562bbd317f7e <unknown>\n#8 0x562bbd5cd8d8 <unknown>\n#9 0x562bbd5d1800 <unknown>\n#10 0x562bbd5dbcfc <unknown>\n#11 0x562bbd5d2418 <unknown>\n#12 0x562bbd59f42f <unknown>\n#13 0x562bbd5f64e8 <unknown>\n#14 0x562bbd5f66b4 <unknown>\n#15 0x562bbd607143 <unknown>\n#16 0x7f8649694b43 <unknown>","time":{"start":1697135203368,"stop":1697135204394,"duration":1026}}]},"tags":["web"]},"source":"ce607f5ddf6c0d24.json","parameterValues":[]}